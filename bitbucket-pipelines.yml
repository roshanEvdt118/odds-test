pipelines:
  branches:
                    
    main:
      - step:
          name: Build and Deploy Production to ECS
          image: node:22
          caches:
            - node
          services:
            - docker
          script:
            
            - export NODE_OPTIONS="--max-old-space-size=6144"
            - export GENERATE_SOURCEMAP=false
            - apt-get update && apt-get install -y awscli
            - aws configure set aws_access_key_id $ACCESS_KEY_ID
            - aws configure set aws_secret_access_key $SECRET_ACCESS_KEY
            - export AWS_ACCESS_KEY_ID=$ACCESS_KEY_ID
            - export AWS_SECRET_ACCESS_KEY=$SECRET_ACCESS_KEY
                        
            # Install dependencies and build React app (outside Docker)
            - npm install --force
            - echo "REACT_APP_BACKEND_BASE_URL=https://api.odds777.com" > .env
            - echo "REACT_APP_REGION=INR,PKR,AED" >> .env
            - echo "REACT_APP_SOURCE_OPTIONS=Cash - K, Cash - D, Cash - T, Cash - P, Online - P, Online - I, Bonus, Test" >> .env
            - CI='' npm run build
            - aws ecr get-login-password --region $REGION_COM | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$REGION_COM.amazonaws.com
            - echo "Building Docker image"
            #- docker build --memory=8g --build-arg REACT_APP_PLATFORM_BASEURL=$REACT_APP_PLATFORM_BASEURL_PROD_ODDS_COM -t prod-odds777.com-admin-panel .
            - docker build --memory=8g -t prod-odds777.com-admin-panel .
            - echo "Tagging Docker image"
            - docker tag prod-odds777.com-admin-panel:latest $ACCOUNT_ID.dkr.ecr.$REGION_COM.amazonaws.com/prod-odds777.com-admin-panel:latest
            - echo "Pushing Docker image to ECR"
            - docker push $ACCOUNT_ID.dkr.ecr.$REGION_COM.amazonaws.com/prod-odds777.com-admin-panel:latest
            - echo "Updating ECS service"
            - aws ecs update-service --cluster  $CLUSTER_NAME_PROD_ODDS_COM --service $SERVICE_NAME_ADMIN_PROD_ODDS_COM --force-new-deployment --region $REGION_COM
          size: 2x
          
    deploy-admin-to-odds777.vip-prod:
      - step:
          name: Build and Deploy Production to ECS
          image: node:22
          caches:
            - node
          services:
            - docker
          script:
            - export NODE_OPTIONS="--max-old-space-size=6144"
            - export GENERATE_SOURCEMAP=false
            - apt-get update && apt-get install -y awscli
            - aws configure set aws_access_key_id $ACCESS_KEY_ID
            - aws configure set aws_secret_access_key $SECRET_ACCESS_KEY
            - export AWS_ACCESS_KEY_ID=$ACCESS_KEY_ID
            - export AWS_SECRET_ACCESS_KEY=$SECRET_ACCESS_KEY
            
            # Install dependencies and build React app (outside Docker)
            - npm install --force
            - echo "REACT_APP_BACKEND_BASE_URL=https://api.odds777.vip" > .env
            - echo "REACT_APP_REGION=INR,PKR,AED" >> .env
            - echo "REACT_APP_SOURCE_OPTIONS=Cash - K, Cash - D, Cash - T, Cash - P, Online - P, Online - I, Bonus, Test" >> .env
            - CI='' npm run build
            - aws ecr get-login-password --region $REGION_VIP | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$REGION_VIP.amazonaws.com
            - echo "Building Docker image"
            - docker build --memory=8g -t prod-vip-odds777-admin-panel .
            #- docker build --memory=8g --build-arg REACT_APP_PLATFORM_BASEURL=$REACT_APP_PLATFORM_BASEURL_PROD_ODDS_VIP -t prod-vip-odds777-admin-panel .
            - echo "Tagging Docker image"
            - docker tag prod-vip-odds777-admin-panel:latest $ACCOUNT_ID.dkr.ecr.$REGION_VIP.amazonaws.com/prod-vip-odds777-admin-panel:latest
            - echo "Pushing Docker image to ECR"
            - docker push $ACCOUNT_ID.dkr.ecr.$REGION_VIP.amazonaws.com/prod-vip-odds777-admin-panel:latest
            - echo "Updating ECS service"
            - aws ecs update-service --cluster  $CLUSTER_NAME_PROD_ODDS_VIP --service $SERVICE_NAME_ADMIN_PROD_ODDS_VIP --force-new-deployment --region $REGION_VIP
          size: 2x   